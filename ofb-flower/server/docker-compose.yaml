version: '3.3'

services:
    flower:
        deploy:
            restart_policy:
                condition: on-failure
                delay: 3s
                max_attempts: 2
                window: 30s
        build:
            context: ../
            dockerfile: ./server/flower/Dockerfile
        container_name: flower
        ports:
        - "$FLWR_PORT:$FLWR_PORT"
        expose:
        - "$FLWR_PORT"
        networks:
        - backend
        environment:
        - SERVER_ADDRESS=${FLWR_ADDRESS}:${FLWR_PORT}
        - MLFLOW_HOST=${MLFLOW_HOST}
        - MLFLOW_PORT=${MLFLOW_PORT}
        - LOG_HOST=${LOG_HOST}
        - FRACTION_FIT=${FRACTION_FIT}
        - FRACTION_EVAL=${FRACTION_EVAL}
        - MIN_SAMPLE_SIZE=${MIN_SAMPLE_SIZE}
        - MIN_NUM_CLIENTS=${MIN_NUM_CLIENTS}
        - NUM_WORKERS=${NUM_WORKERS}
        
        - MODEL=${MODEL}
        - N_CLASSES=${N_CLASSES}
        - ROUNDS=${ROUNDS}
        - LOCAL_EPOCHS=${LOCAL_EPOCHS}
        - BATCH_SIZE=${BATCH_SIZE}
        - LR=${LR}
        - LR_SCHEDULER=${LR_SCHEDULER}
        - CRITERION=${CRITERION}
        - DATA_AUGMENTATION=${DATA_AUGMENTATION}
        - LOAD_MLFLOW_MODEL=${LOAD_MLFLOW_MODEL}
        command: python3 main.py 
    db:
        restart: always
        image: mysql/mysql-server:8.0.29
        container_name: mlflow_db
        expose:
            - "3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./dbdata:/var/lib/mysql
            - ./mlflow/storage:/app/
    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow
        expose:
            - "$MLFLOW_PORT"
        networks:
            - frontend
            - backend
        # ftp://${FTP_USER}:${FTP_PASS}@${FTP_HOST}/var/
        command: mlflow server --default-artifact-root file:$PWD/mlflow/storage --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --host 0.0.0.0 --port ${MLFLOW_PORT}      
    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "80:80"
        networks:
            - frontend
        depends_on:
            - web
networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    dbdata: