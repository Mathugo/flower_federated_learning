version: '3.3'

services:
    ftp:
        image: delfer/alpine-ftp-server
        restart: always
        container_name: ftp
        ports:
            - ${FTP_PORT}:21
            - 21000-21010:21000-21010
        environment:
            - USERS=${FTP_USER}|${FTP_PASS}|/home/
        volumes:
            - ./mlflow/storage/artifacts:/home           
    flower:
      restart: always
      build:
        context: ../
        dockerfile: ./server/flower/Dockerfile
      container_name: flower
      ports:
        - "$FLWR_PORT:$FLWR_PORT"
      expose:
        - "$FLWR_PORT"
      networks:
        - backend
      environment:
        - N_CLASSES=${N_CLASSES}
        - FLWR_ADDRESS=${FLWR_ADDRESS}
        - FLWR_PORT=${FLWR_PORT}
        - ROUNDS=${ROUNDS}
        - FRACTION_FIT=${FRACTION_FIT}
        - FRACTION_EVAL=${FRACTION_EVAL}
        - MIN_SAMPLE_SIZE=${MIN_SAMPLE_SIZE}
        - MIN_NUM_CLIENTS=${MIN_NUM_CLIENTS}
        - LOG_HOST=${LOG_HOST}
        - BATCH_SIZE=${BATCH_SIZE}
        - NUM_WORKERS=${NUM_WORKERS}
        - LOCAL_EPOCHS=${LOCAL_EPOCHS}
      command: python3 main.py --server_address ${FLWR_ADDRESS}:${FLWR_PORT} --mlflow_server_ip ${MLFLOW_HOST} --mlflow_server_port ${MLFLOW_PORT} --rounds ${ROUNDS} --fraction_fit ${FRACTION_FIT} --fraction_eval ${FRACTION_EVAL} --min_sample_size ${MIN_SAMPLE_SIZE} --local_epochs ${LOCAL_EPOCHS} --load_weights --model HugoNet --n_classes ${N_CLASSES} --num_workers=${NUM_WORKERS} --batch_size ${BATCH_SIZE} 
    db:
        restart: always
        image: mysql/mysql-server:8.0.29
        container_name: mlflow_db
        expose:
            - "3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./dbdata:/var/lib/mysql
    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow
        expose:
            - "$MLFLOW_PORT"
        networks:
            - frontend
            - backend
        # ftp://${FTP_USER}:${FTP_PASS}@${FTP_HOST}/var/
        command: mlflow server --default-artifact-root file:$PWD/mlflow/storage/artifacts --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --host 0.0.0.0 --port ${MLFLOW_PORT}      
    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "80:80"
        networks:
            - frontend
        depends_on:
            - web
networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata: